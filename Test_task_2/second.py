"""
Задание второе

Нужно вывести достижимые вершины для заданной точки
"""


def my_code(data_set: dict, start: int):  # Сама функция
    res = [start]  # Создаем список для хранения результатов
    for item in data_set.get(start):  # Проходимся по словарю для получения данных по ключу
        if item not in res:  # Проверяем, есть ли значение в списке и если нет - то добавляем
            res.append(item)
            if type(data.get(item)) == list:  # Проверка типа данных
                for sub_item in data_set.get(item):  # Проходимся по списку смежных вершин
                    # Проверяем элементы словаря стартовой точки на наличие смеженных вершин
                    if sub_item not in res:  # Также проверяем дублирование значений
                        res.append(sub_item)
    return res


data = {
    1: [2, 3],
    2: [4]
}  # Наборы данных для проверки

data2 = {
    1: [2, 3],
    2: [3, 4],
    4: [1]
}

for i in my_code(data, 1):  # Вызов функции (при необходимости просто заменить переменную с набором данных)
    print(i)

"""
2.2 Можно сделать функцию рекурсивной (как в первом задании.) тогда необходимость в повторе пропадет
!! Типы данных разные, рекурсия не решит этот момент (во всяком случае в том виде, который есть сейчас) !!
"""
